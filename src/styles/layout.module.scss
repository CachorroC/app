$MinLW: 1200px; //minimum large width
$MaxLW: 1800px; // maximum large width
$Bp1W: 960px;
$MaxMW: 1200px;
$MinMW: 600px;
$MinSW: 320px; // minimum small width
$MaxSW: 480px; //maximum sma width

.container {
  transition: all 0.5s;
  display: grid;
  width: 100%;
  gap: 1rem;
  padding: 1rem 1rem 0 1rem;
  height: 100svh;
  box-sizing: border-box;
  background-color: var(--surface-container);
  grid-auto-flow: row;
  font-variation-settings:
    'FILL' 1,
    'wght' 700,
    'GRAD' 0,
    'opsz' 48;
  @media (width < 600px) {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(12, 1fr);
    grid-template-areas:
      'top top top top'
      'right right right right'
      'right right right right'
      'left left left left'
      'left left left left'
      'left left left left'
      'left left left left'
      'left left left left'
      'left left left left'
      'left left left left'
      'left left left left'
      'header header header header';
  }

  @media (600px < width < 1200px) {
    grid-template-columns: 5rem repeat(7, 1fr);
    grid-template-rows: repeat(12, minmax(6vh, 1fr));
    grid-template-areas:
      'header top top top top top right right'
      'header top top top top top right right'
      'header left left left left left  right right '
      'header left left left left left  right right '
      'header left left left left left  right right '
      'header left left left left left  right right '
      'header left left left left left  right right '
      'header left left left left left  right right '
      'header left left left left left  right right '
      'header left left left left left  right right '
      'header left left left left left  right right '
      'header left left left left left  right right ';
  }

  @media (1200px < width) {
    padding: 0;
    grid-template-columns: 5rem repeat(9, minmax(8vw, 1fr));
    grid-template-rows: repeat(10, minmax(8vh, 1fr));
    grid-template-areas:
      'header top top top top top top top right right'
      'header left left left left left left left right right'
      'header left left left left left left left right right'
      'header left left left left left left left right right'
      'header left left left left left left left right right'
      'header left left left left left left left right right'
      'header left left left left left left left right right'
      'header left left left left left left left right right'
      'header left left left left left left left right right'
      'header left left left left left left left right right';
  }
}

.header {
  display: grid;
  transition: 300ms;
  align-content: space-evenly;
  justify-content: center;
  align-items: stretch;
  justify-items: stretch;
  grid-column: 1 / 2;
  grid-row: 1 / 9;
  grid-area: header;
  gap: inherit;
  padding: 0 0.7rem;
  grid-template-rows: subgrid;
  grid-template-columns: subgrid;
  .nav {
    display: grid;
    grid-template-rows: subgrid;
    grid-template-columns: subgrid;
    background-color: var(--nav-background);
  }
  @media (width < 600px) {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-evenly;
  }
  @media (1200px < width) {
    display: flex;
    flex-flow: column nowrap;
    justify-content: space-evenly;
  }
}

.right {
  flex-wrap: nowrap;
  flex-direction: column;
  display: flex;
  justify-content: space-between;
  align-items: stretch;
  border-radius: 2vmin;
  padding: 0.5rem;
  align-content: stretch;
  background-color: var(--surface);
  grid-area: right;
  overflow: auto;
  gap: 1rem;
  box-sizing: border-box;
  box-shadow: var(--dp2);

  & > * {
    flex: 1 0 auto;
  }
}

.top {
  display: flex;
  flex-flow: row wrap;
  border-radius: 2vmin;
  background-color: var(--surface-dim);
  color: var(--on-surface);
  padding: 2vmin;
  gap: 2vmin;
  justify-content: space-between;
  align-items: stretch;
  grid-area: top;

  &:first-child {
    flex: 0 1 40%;
  }
  @media (width < 600px) {
    flex-flow: row nowrap;
  }
  @media (1200px<width) {
    flex-flow: row nowrap;
  }
}

.left {
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  background-color: var(--surface);
  grid-area: left;
  border-radius: 2vmin;
  display: grid;
  padding: 2vmin;
  gap: 2vmin;
  overflow: auto;

  &Column {
    @extend .left;
    flex-flow: column wrap;
    & > * {
      flex: 0 1 calc(50% - 4vmin);
    }
  }
  &Grid {
    @extend .left;
    display: grid;
    width: 100%;
    height: 100%;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  }
  & > * {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 20%;
    align-self: stretch;
    order: 0;
  }
  @media (width < 600px) {
    display: flex;
    flex-flow: column nowrap;
  }
}

.divission {
  height: 100%;
  width: 5px;
  background-color: var(--oultine);
}

.link {
  border: none;
  box-sizing: border-box;
  text-decoration: none;
  border-radius: 1rem;
  text-align: center;
  display: flex;
  flex-flow: column nowrap;
  justify-items: stretch;
  align-items: center;
  justify-content: space-evenly;
  position: relative;
  align-content: center;
  transition: all 0.3s;
  color: var(--on-surface-variant);
  & > .icon {
    text-align: center;
  }
  & > .text {
    opacity: 0;
    font-size: 0.7rem;
    font-variation-settings: 'wght' 500;
    font-style: var(--label-medium-font-family-style);
    font-weight: var(--label-medium-font-weight);
    letter-spacing: var(--label-medium-tracking);
    line-height: var(--label-medium-height);
    text-transform: var(--label-medium-text-transform);
    text-decoration: var(--label-medium-text-decoration);
    @media (width < 600px) {
      opacity: 1;
    }
  }

  &Active {
    @extend .link;
    & > .text {
      opacity: 1;
    }
    & > .icon {
      background-color: var(--primary-container);
      color: var(--on-primary-container);
      width: 3.5rem;
      border-radius: 1rem;
      padding: 0.2rem 0;
      box-sizing: border-box;
    }
  }
  &:hover,
  &:focus,
  &:active {
    & > .text {
      opacity: 1;
    }
    & > .icon {
      font-variation-settings:
        'FILL' 1,
        'wght' 600,
        'GRAD' 200,
        'opsz' 40;
    }
    &::after {
      content: '';
      width: 100%;
      display: block;
      border-radius: 1rem;
      height: 100%;
      top: 0;
      left: 0;
      position: absolute;
      background-color: var(--on-primary-container);
    }
  }
  &:hover {
    &::after {
      opacity: 0.08;
    }
  }
  &:focus,
  &:active {
    &::after {
      opacity: 0.1;
    }
  }
}
.loader {
  border: 10px solid var(--surface-container-high);
  /* Light grey */
  border-top: 10px solid var(--secondary);
  /* Blue */
  border-radius: 50vmin;
  width: 50px;
  height: 50px;
  box-sizing: border-box;
  animation: spin 2s linear infinite;

  & > .loader {
    border: 16px solid var(--secondary-container);
    /* Light grey */
    border-top: 16px solid var(--secondary);
    /* Blue */
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.section {
  display: flex;
  border-radius: 2vmin;
  flex: 1;
  gap: 0.5rem;
  justify-content: space-evenly;
  align-items: stretch;
  align-content: stretch;
  padding: 0.5rem;
  &Row {
    @extend .section;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: space-between;
  }
  &Column {
    @extend .section;
    gap: 1.5rem;
    flex-flow: column nowrap;
  }
  .label {
    font-family: var(--play-display);
    flex: 1;
  }
  .titleInput,
  .title {
    flex: 2;
  }
}

.segment {
  display: flex;
  justify-content: space-between;
  align-items: stretch;
  box-sizing: border-box;
  padding: 0.2rem;
  flex: 1;
  border-radius: 2vmin;
  gap: 0;

  &Detached {
    @extend .segment;
    flex-flow: column nowrap;
    position: absolute;
    right: 2rem;
    box-shadow: var(--dp6);

    * {
      &:first-child {
        border-radius: 2vmin 2vmin 0 0;
      }
      &:last-child {
        border-radius: 0 0 2vmin 2vmin;
      }
      &:only-child {
        border-radius: 2vmin;
      }
    }
  }
  &Column {
    @extend .segment;
    flex-flow: column nowrap;

    box-shadow: var(--dp6);
    * {
      &:last-child {
        border-radius: 0 0 2vmin 2vmin;
      }
      &:first-child {
        border-radius: 2vmin 2vmin 0 0;
      }
      &:only-child {
        border-radius: 2vmin;
      }
    }
    @media (width < 600px) {
      flex-flow: row wrap;
    }
  }
  &Row {
    @extend .segment;
    flex-flow: row nowrap;
    justify-content: space-around;
    * {
      &:first-child {
        border-radius: 2vmin 0 0 2vmin;
      }
      &:last-child {
        border-radius: 0 2vmin 2vmin 0;
      }
      &:only-child {
        border-radius: 2vmin;
      }
    }
  }
  &RowWrap {
    @extend .segment;
    display: flex;
    flex-flow: row wrap;
    justify-content: space-around;
    justify-items: baseline;
    align-items: stretch;
    align-content: stretch;
    * {
      &:first-child {
        border-radius: 2vmin 0 0 2vmin;
      }
      &:last-child {
        border-radius: 0 2vmin 2vmin 0;
      }
      &:only-child {
        border-radius: 2vmin;
      }
    }
  }
}

.button {
  border: none;
  box-sizing: border-box;

  border-radius: 1rem;
  padding: 1rem;
  display: flex;
  background-color: var(--primary-container);
  color: var(--on-primary-container);
  flex-flow: column nowrap;
  justify-items: stretch;
  align-items: center;
  justify-content: space-around;
  align-content: center;
  transition: all 0.3s;

  & > .icon {
    font-size: 1.1rem;
  }
  & > .text {
    font-family: var(--raleway);
    word-wrap: break-word;
    word-break: break-all;
    font-style: var(--label-medium-font-family-style);
    font-weight: var(--label-medium-font-weight);
    font-size: var(--label-medium-font-size);
    letter-spacing: var(--label-medium-tracking);
    line-height: var(--label-medium-height);
    text-transform: var(--label-medium-text-transform);
    text-decoration: var(--label-medium-text-decoration);
  }
  @media (600px < width < 1200px) {
    flex-flow: row nowrap;
  }
  &Edit {
    @extend .button;
    background-color: var(--secondary-container);
    color: var(--on-secondary-container);
  }
  &ActiveCategory {
    @extend .button;
    flex-flow: column nowrap;
    flex: 2;
    background-color: var(--secondary-container);
    & > .icon {
      color: var(--on-secondary-container);
    }
    & > .text {
      color: var(--on-surface);
    }
  }
  &PassiveCategory {
    @extend .button;
    flex: 1;
    flex-flow: column nowrap;
    background-color: var(--surface-container-high);

    color: var(--secondary);
    & > .icon {
      color: var(--secondary);
    }
    & > .text {
      color: var(--on-surface);
    }
  }
  &Forward {
    @extend .button;

    background-color: var(--primary-container);
    color: var(--on-primary-container);
    & > .icon,
    & > .text {
      color: var(--on-primary-container);
    }
  }
  &Backwards {
    @extend .button;
    background-color: var(--primary-container);
    color: var(--on-primary-container);

    & > .icon,
    & > .text {
      color: var(--on-primary-container);
    }
  }

  &DrawerMenu {
    @extend .button;
    background-color: rgba(0, 0, 0, 0);
    & > .icon,
    & > .text {
      color: var(--on-surface-variant);
    }
  }

  &Modal {
    @extend .button;
    grid-row: 2 / 3;
    background-color: var(--primary-container);
    & > .icon,
    & > .text {
      color: var(--on-primary-container);
    }
  }
  &Home {
    @extend .button;
    box-shadow: var(--dp2);

    background-color: var(--primary);
    color: var(--on-primary);
    & > .icon,
    & > .text {
      color: var(--on-primary);
    }
  }
  &Actuacion {
    @extend .button;
    flex: 0 1 auto;
  }
  &Chip {
    @extend .button;
    height: minmax(2rem, 3rem);
    flex: 0 1 auto;
    box-sizing: border-box;
  }
}
