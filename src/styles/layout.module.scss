$MinLW: 1200px; //minimum large width
$MaxLW: 1800px; // maximum large width
$Bp1W: 960px;
$MaxMW: 1200px;
$MinMW: 600px;
$MinSW: 320px; // minimum small width
$MaxSW: 480px; //maximum sma width

.container {
  display: grid;
  gap: 2vmin;
  width: 100%;
  height: 100svh;
  box-sizing: border-box;
  background-color: var(--surface-container);
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(12, 1fr);
  grid-auto-flow: row;
  grid-template-areas:
    "top top top top"
    "right right right right"
    "right right right right"
    "left left left left"
    "left left left left"
    "left left left left"
    "left left left left"
    "left left left left"
    "left left left left"
    "left left left left"
    "left left left left"
    "header header header header";
  font-variation-settings:
    "FILL" 1,
    "wght" 700,
    "GRAD" 0,
    "opsz" 48;

  @media (600px < width < 1200px) {
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(12, 1fr);
    grid-auto-flow: row;
    grid-template-areas:
      "sidebar header header header header header header header"
      "sidebar top top top top top right right"
      "sidebar left left left left left  right right "
      "sidebar left left left left left  right right "
      "sidebar left left left left left  right right "
      "sidebar left left left left left  right right "
      "sidebar left left left left left  right right "
      "sidebar left left left left left  right right "
      "sidebar left left left left left  right right "
      "sidebar left left left left left  right right "
      "sidebar left left left left left  right right "
      "sidebar left left left left left  right right ";
  }

  @media (1200px < width) {
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: repeat(8, minmax(100px, auto));
    grid-template-areas:
      "sidebar sidebar top top top top top top top right right right"
      "sidebar sidebar left left left left left left left right right right"
      "sidebar sidebar left left left left left left left right right right"
      "sidebar sidebar left left left left left left left right right right"
      "sidebar sidebar left left left left left left left right right right"
      "sidebar sidebar left left left left left left left right right right"
      "sidebar sidebar left left left left left left left right right right"
      "sidebar sidebar left left left left left left left right right right";
  }
}

.header {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: stretch;
  grid-area: header;
  border-radius: 0 0 2vmin 2vmin;
  gap: 1vmin;
  padding: 1vmin;
  box-shadow: var(--dp6);
  background-color: var(--nav-background);
}
.right {
  flex-wrap: nowrap;
  flex-direction: column;
  display: flex;
  justify-content: space-between;
  align-items: stretch;
  width: 100%;
  height: 100%;
  border-radius: 2vmin;
  padding: 2vmin;
  align-content: stretch;
  background-color: var(--surface);
  grid-area: right;
  overflow: auto;
  gap: 1rem;
  box-sizing: border-box;
  box-shadow: var(--dp2);

  & > * {
    flex: 1 0 auto;
  }
}

.top {
  display: flex;
  flex-flow: row wrap;
  border-radius: 2vmin;
  background-color: var(--surface-dim);
  color: var(--on-surface);
  padding: 2vmin;
  gap: 2vmin;
  justify-content: space-between;
  align-items: stretch;
  grid-area: top;

  &:first-child {
    flex: 0 1 40%;
  }
  @media (width < 600px) {
    flex-flow: row nowrap;
  }
  @media (1200px<width) {
    flex-flow: row nowrap;
  }
}

.left {
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  background-color: var(--surface);
  grid-area: left;
  border-radius: 2vmin;
  display: grid;
  padding: 2vmin;
  gap: 2vmin;
  overflow: auto;
  &Gutter{
    @extend .left;
    background-color: var(--nav-background);
    grid-column: 1 / 3;
    grid-row: 1 / 9;
    gap: 1vh;
    padding: 1vh;
    grid-template-rows: subgrid;
     grid-template-columns: 1fr;
      * {
      &:last-child {
        border-radius: 0 0 2vmin 2vmin;
      }
      &:first-child {
        border-radius: 2vmin 2vmin 0 0;
      }
      &:only-child {
        border-radius: 2vmin;
      }
    }
  }
  &Column {
    @extend .left;
    flex-flow: column wrap;
    & > * {
      flex: 0 1 calc(50% - 4vmin);
    }
  }
  &Grid {
    @extend .left;
    display: grid;
    width: 100%;
    height: 100%;
    grid-template-columns: repeat(4, 1fr);
    grid-auto-rows: 1fr;
    grid-auto-flow: dense;
  }
  & > * {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 20%;
    align-self: stretch;
    order: 0;
  }
  @media (width < 600px) {
    display: flex;
    flex-flow: column nowrap;
  }
}

.divission {
  height: 100%;
  width: 5px;
  background-color: var(--oultine);
}

.link {
  background-color: var(--surface-container-highest);
  color: var(--on-surface);
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-evenly;
  align-content: stretch;
  align-items: center;
  border-radius: 2vmin;
  box-shadow: var(--dp2);

  &:hover,
  &:active {
    & > span {
      font-variation-settings:
        "FILL" 1,
        "wght" 600,
        "GRAD" 200,
        "opsz" 40;
    }

    background-color: var(--inverse-surface);
    color: var(--inverse-on-surface);
  }
}
.loader {
  border: 10px solid var(--surface-container-high);
  /* Light grey */
  border-top: 10px solid var(--secondary);
  /* Blue */
  border-radius: 50vmin;
  width: 50px;
  height: 50px;
  box-sizing: border-box;
  animation: spin 2s linear infinite;

  & > .loader {
    border: 16px solid var(--secondary-container);
    /* Light grey */
    border-top: 16px solid var(--secondary);
    /* Blue */
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.section {
  display: flex;
  border-radius: 2vmin;
  flex: 1;
  gap: 0.5rem;
  justify-content: space-evenly;
  background-color: var(--surface-container-highest);
  align-items: stretch;
  align-content: stretch;

  padding: 0.5rem;
  &Row {
    @extend .section;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: space-between;
  }
  &Column {
    @extend .section;
    gap: 1.5rem;
    flex-flow: column nowrap;
  }
  & > .section {
    gap: 0.5rem;
    padding: 0.1rem;
    display: flex;
    flex: 1;
    flex-flow: row wrap;
    & > .section {
      gap: 0.2rem;
      padding: 0.3rem;
      display: flex;
      flex: 1;
      flex-flow: column nowrap;
    }
  }
  .label {
    font-family: var(--play-display);
    flex: 1;
  }
  .titleInput,
  .title {
    flex: 2;
  }
}

.segment {
  display: flex;
  justify-content: space-between;
  border:  solid 1rem var(--oultine);
  align-items: stretch;
  box-sizing: border-box;
  flex: 1;
  border-radius: 2vmin;
  gap: 0;
  & > * {

  border:  solid .1rem var(--outline);
  }

  &Detached {
    @extend .segment;
    flex-flow: column nowrap;
    position: absolute;
    right: 2rem;
    box-shadow: var(--dp6);

    * {
      &:first-child {
        border-radius: 2vmin 2vmin 0 0;
      }
      &:last-child {
        border-radius: 0 0 2vmin 2vmin;
      }
      &:only-child {
        border-radius: 2vmin;
      }
    }
  }
  &Column {
    @extend .segment;
    flex-flow: column nowrap;

  box-shadow: var(--dp6);
    * {
      &:last-child {
        border-radius: 0 0 2vmin 2vmin;
      }
      &:first-child {
        border-radius: 2vmin 2vmin 0 0;
      }
      &:only-child {
        border-radius: 2vmin;
      }
    }
    @media (width < 600px) {
      flex-flow: row wrap;
    }
  }
  &Row {
    @extend .segment;
    flex-flow: row nowrap;
    justify-content: space-around;
    * {
      &:first-child {
        border-radius: 2vmin 0 0 2vmin;
      }
      &:last-child {
        border-radius: 0 2vmin 2vmin 0;
      }
      &:only-child {
        border-radius: 2vmin;
      }
    }
  }
  &RowWrap {
    @extend .segment;
    display: flex;
    flex-flow: row wrap;
    justify-content: space-around;
    justify-items: baseline;
    align-items: stretch;
    align-content: stretch;
    * {
      &:first-child {
        border-radius: 2vmin 0 0 2vmin;
      }
      &:last-child {
        border-radius: 0 2vmin 2vmin 0;
      }
      &:only-child {
        border-radius: 2vmin;
      }
    }
  }
}
