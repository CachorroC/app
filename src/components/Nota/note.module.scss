.container {
  container-name: note;
  container-type: inline-size;
  display: flex;
  box-shadow: var(--dp2);
  border-radius: 2vmin;
  padding: 1vmin;
  flex-grow: 1;
  flex-flow: column wrap;
  background-color: var(--surface-container);
}

.sub {
  color: var(--primary);
}
.sup {
  font-size: 0.8rem;
  flex: 0 0 auto;
  font-family: var(--raleway);
}
.buttonsRow {
  display: flex;
  flex-flow: row nowrap;
}
.section {
  gap: 2vmin;
  padding: 1vmin;
  display: flex;
  flex-flow: column wrap;
  .label {
    font-family: var(--play-display);
    flex: 1 1 25%;
  }
  .titleInput {
    flex: 2 0 50%;
  }
}
.task {
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  justify-items: stretch;
  &Container {
    @extend .task;
    background-color: var(--surface-container);
  }
  &List {
    @extend .task;

    list-style: none;
    overflow: scroll;
    scroll-snap-type: x mandatory;
  }
}

/* The switchBox - the box around the slider */
.switchBox {
  position: relative;
  display: inline-block;
  box-sizing: border-box;
  border: 1px solid var(--outline-variant);
  border-radius: 50vw;
  width: 62px;
  height: 36px;
}

/* Hide default HTML checkbox */
.switchBox .inputElement {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  border-radius: 50vw;
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--surface-container-highest);
  -webkit-transition: 0.4s;
  transition: 0.4s;
}

.slider:before {
  border-radius: 50vw;
  position: absolute;
  content: '';
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: var(--outline);
  -webkit-transition: 0.4s;
  transition: 0.4s;
}

.inputElement:checked + .slider {
  background-color: var(--primary);
  &:before {
    background-color: var(--on-primary);
  }
}

.inputElement:focus + .slider {
  box-shadow: 0 0 1px var(--primary);
}

.inputElement:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

.submitButton {
  border: none;
  border-radius: 2vmin;
  box-shadow: var(--dp5);
  flex: 1 0 25%;
  background-color: var(--secondary);
  & > span,
  & > .icon {
    color: var(--on-secondary);
    font-variation-settings:
      'FILL' 0,
      'wght' 300,
      'GRAD' 0,
      'opsz' 24;
  }
  &:hover,
  &:active {
    background-color: var(--secondary);
    box-shadow: var(--dp8);
    & > span,
    & > .icon {
      font-variation-settings:
        'FILL' 1,
        'wght' 600,
        'GRAD' 200,
        'opsz' 48;
      color: var(--on-secondary);
    }
  }
}
.textArea {
  background-color: var(--surface-variant);
  border: none;
  color: var(--on-surface-variant);
  border-radius: 2vmin;
  resize: both;
  text-align: center;
  padding: 5cqmin;
  flex: 1;
  &:focus {
    background-color: var(--surface);
  }
}
.deleteButton {
  grid-area: deleteButton;
}
.addButton {
  grid-area: addButton;
}
.HomeButton {
  grid-area: HomeButton;
}
.button {
  .Edit {
    @extend .button;
    grid-area: editButton;
  }
  .Delete {
    @extend .button;
    grid-area: deleteButton;
  }
  .Add {
    @extend .button;
    grid-area: addButton;
  }
  & {
    border: none;
    box-shadow: var(--dp5);
    border-radius: 2vmin;
    flex-grow: 1;
    background-color: var(--secondary);
    display: flex;
    flex-flow: column nowrap;
    justify-items: center;
    align-items: center;
    justify-content: center;
    align-content: center;
  }
  .ButtonTextHelper {
    display: none;
    opacity: 0;
    transition: all 1s;
  }
  & > span,
  & > .icon {
    color: var(--on-secondary);
    font-variation-settings:
      'FILL' 0,
      'wght' 300,
      'GRAD' 0,
      'opsz' 24;
  }
  &:hover,
  &:active {
    background-color: var(--tertiary-container);
    box-shadow: var(--dp8);
    & > span,
    & > .icon {
      font-variation-settings:
        'FILL' 1,
        'wght' 400,
        'GRAD' 200,
        'opsz' 24;
      color: var(--tertiary);
    }
  }
}
.content {
  align-self: stretch;
}
.checkboxItem {
  padding: 15px;
}
.tareas {
  display: flex;
  flex: 1 0 100%;
  width: 100%;
  flex-flow: column nowrap;
}
.select {
  background-color: var(--primary-container);
}
.innactive {
  background-color: var(--outline-variant);
  color: var(--outline);
}
.active {
  background-color: var(--secondary);
  color: var(--on-secondary);
}
@container note (min-width: 600px) {
  .form,
  .nota {
    .section {
      flex-flow: row nowrap;
      .label {
        flex: 0 1 20%;
      }
      .textArea {
        padding: 2cqmin;
        flex: 1 0 80%;
      }
    }
  }
}
@container note (max-width: 600px) {
  .form,
  .nota {
    .section {
      flex-flow: column nowrap;
      .label {
        flex: 1 0 auto;
      }
      .textArea {
        flex: 1 0 auto;
      }
    }
  }
}
@container note (width < 100px) {
  .form,
  .nota {
    box-shadow: var(--dp1);
  }
}
@container note ( 100px < width < 200px) {
  .form,
  .nota {
    box-shadow: var(--dp2);
  }
}
@container note ( 200px < width < 300px) {
  .form,
  .nota {
    box-shadow: var(--dp3);
  }
}
@container note ( 300px < width < 400px) {
  .form,
  .nota {
    box-shadow: var(--dp4);
  }
}
@container note ( 400px < width < 500px) {
  .form,
  .nota {
    box-shadow: var(--dp5);
  }
}
@container note ( 500px < width < 600px) {
  .form,
  .nota {
    box-shadow: var(--dp6);
  }
}
@container note ( 600px < width) {
  .form,
  .nota {
    background-color: var(--primary-container);
    box-shadow: var(--dp7);
  }
}
